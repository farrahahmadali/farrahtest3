[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home",
    "section": "",
    "text": "Assignment 10\n\n\n\n\n\n\n\nAssignment\n\n\n\n\n\n\n\n\n\n\n\nDec 8, 2023\n\n\nFarrah Ali\n\n\n\n\n\n\n  \n\n\n\n\nAssignment 9\n\n\n\n\n\n\n\nAssignment\n\n\n\n\n\n\n\n\n\n\n\nDec 7, 2023\n\n\nFarrah Ali\n\n\n\n\n\n\n  \n\n\n\n\nAssignment 8\n\n\n\n\n\n\n\nAssignment\n\n\n\n\n\n\n\n\n\n\n\nDec 7, 2023\n\n\nFarrah Ali\n\n\n\n\n\n\n  \n\n\n\n\nProject Presentation\n\n\n\n\n\n\n\nProject\n\n\n\n\n\n\n\n\n\n\n\nNov 29, 2023\n\n\nFarrah Ali, Tayaba Saleem, Yichao Jin, Grant Powell, & Hoda Elsafadi\n\n\n\n\n\n\n  \n\n\n\n\nAssignment 6\n\n\n\n\n\n\n\nAssignment\n\n\n\n\n\n\n\n\n\n\n\nOct 13, 2023\n\n\nFarrah Ali\n\n\n\n\n\n\n  \n\n\n\n\nProject Proposal\n\n\n\n\n\n\n\nProject\n\n\n\n\n\n\n\n\n\n\n\nOct 13, 2023\n\n\nFarrah Ali, Tayaba Saleem, Yichao Jin, Grant Powell, & Hoda Elsafadi\n\n\n\n\n\n\n  \n\n\n\n\nAssignment 5\n\n\n\n\n\n\n\nAssignment\n\n\n\n\n\n\n\n\n\n\n\nOct 12, 2023\n\n\nFarrah Ali\n\n\n\n\n\n\n  \n\n\n\n\nAssignment 4\n\n\n\n\n\n\n\nAssignment\n\n\n\n\n\n\n\n\n\n\n\nOct 11, 2023\n\n\nFarrah Ali\n\n\n\n\n\n\n  \n\n\n\n\nAssignment 3\n\n\n\n\n\n\n\nAssignment\n\n\n\n\n\n\n\n\n\n\n\nSep 27, 2023\n\n\nFarrah Ali, Tayaba Saleem, Yichao Jin, Grant Powell, & Hoda Elsafadi\n\n\n\n\n\n\n  \n\n\n\n\nAssignment 2\n\n\n\n\n\n\n\nAssignment\n\n\n\n\n\n\n\n\n\n\n\nSep 20, 2023\n\n\nFarrah Ali\n\n\n\n\n\n\n  \n\n\n\n\nAssignment 1\n\n\n\n\n\n\n\nAssignment\n\n\n\n\n\n\n\n\n\n\n\nSep 13, 2023\n\n\nFarrah Ali\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Assignments",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Welcome to my Data Visualization Blog"
  },
  {
    "objectID": "Assignment 3.html",
    "href": "Assignment 3.html",
    "title": "Assignment 3",
    "section": "",
    "text": "library(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Direct link to the OWID COVID-19 data CSV file\nowid_url &lt;- \"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.csv\"\n\n# Read the CSV data\nowidall &lt;- read.csv(owid_url)\n\n# Deselect cases/rows with OWID \nowidall &lt;- owidall[!grepl(\"^OWID\", owidall$iso_code), ]  \n\n# Subset by continent: Europe and specific date range\nowideu &lt;- owidall %&gt;%\n  filter(continent == \"Europe\", \n         date &gt;= as.Date(\"2020-01-01\") & date &lt;= as.Date(\"2023-08-31\"))\n\n# Convert 'date' to Date class\nowideu$date &lt;- as.Date(owideu$date)\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(scales)  # for formatting dates\n\n# Create a scatterplot matrix with ggplot2\nscatterplot_matrix &lt;- ggplot(owideu, aes(x = date, y = new_deaths)) +\n  geom_point(na.rm = TRUE, color = \"deeppink\") +  # Exclude missing values from the plot\n  labs(x = \"Date\", y = \"COVID Deaths in Europe (Daily)\") +\n  scale_x_date(labels = scales::date_format(\"%Y-%m\"),\n               breaks = seq(as.Date(\"2020-01-01\"), as.Date(\"2023-08-31\"), by = \"1 month\")) +  # Show every month within the range\n  scale_y_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000),\n                     labels = c(\"0\", \"1000\", \"\", \"3000\", \"\", \"5000\", \"\", \"7000\"),\n                     limits = c(0, 7000)) +  # Customize y-axis tick marks and set limits\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),\n        panel.grid.major = element_blank(),  # Remove major gridlines\n        panel.grid.minor = element_blank(),  # Remove minor gridlines\n        panel.background = element_rect(fill = \"white\"),\n        panel.border = element_rect(color = \"black\", size = 1, fill = NA),  # Add a border\n        axis.ticks.y = element_line(linewidth = 0.5),  # Show y-axis ticks\n        axis.text.y = element_text(size = 12),  # Adjust y-axis labels size\n        axis.title.y = element_text(size = 12)) +\n  geom_text(aes(x = as.Date(\"2020-04-15\"), y = 6000, label = \"Spain\"), size = 3) +\n  geom_text(aes(x = as.Date(\"2020-04-18\"), y = 5000, label = \"Spain\"), size = 3) +\n  geom_text(aes(x = as.Date(\"2020-12-01\"), y = 6500, label = \"Germany\"), size = 3, hjust = -0.1) +\n  geom_text(aes(x = as.Date(\"2021-11-01\"), y = 5000, label = \"Ukraine\"), size = 3,  hjust = -0.1) +\n  geom_text(aes(x = as.Date(\"2023-01-01\"), y = 1500, label = \"Germany\"), size = 3,  hjust = -0.1) +\n  geom_text(aes(x = as.Date(\"2023-09-20\"), y = 500, label = \"Italy\"), size = 3,  hjust = -0.1)\n\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\nprint(scatterplot_matrix)"
  },
  {
    "objectID": "Assignment 2.html",
    "href": "Assignment 2.html",
    "title": "Assignment 2",
    "section": "",
    "text": "Happy Planet Index Plot\n\n### Paul Murrell's R examples (selected)\n\n##Using Happy Planet Index dataset (https://happyplanetindex.org/)\n\n## Start plotting from basics \n# Note the order\nplot(pressure, pch=16)  # Can you change pch?\ntext(150, 600, \n     \"Pressure (mm Hg)\\nversus\\nTemperature (Celsius)\")\n\n\n\n#  Examples of standard high-level plots \n#  In each case, extra output is also added using low-level \n#  plotting functions.\n# \n\n# Setting the parameter (3 rows by 2 cols)\npar(mfrow=c(3, 2))\n\n# Scatterplot\n# Note the incremental additions\n\nx &lt;- c(0.5, 2, 4, 8, 12, 16)\ny1 &lt;- c(1, 1.3, 1.9, 3.4, 3.9, 4.8)\ny2 &lt;- c(4, .8, .5, .45, .4, .3)\n\n# Setting label orientation, margins c(bottom, left, top, right) & text size\npar(las=1, mar=c(4, 4, 2, 4), cex=.7) \nplot.new()\nplot.window(range(x), c(0, 6))\nlines(x, y1)\nlines(x, y2)\npoints(x, y1, pch=16, cex=2) # Try different cex value?  \npoints(x, y2, pch=21, bg=\"white\", cex=2)  # Different background color\npar(col=\"gray50\", fg=\"gray50\", col.axis=\"gray50\")\naxis(1, at=seq(0, 16, 4)) # What is the first number standing for?\naxis(2, at=seq(0, 6, 2))\naxis(4, at=seq(0, 6, 2))\nbox(bty=\"u\")\nmtext(\"Travel Time (s)\", side=1, line=2, cex=0.8)\nmtext(\"Responses per Travel\", side=2, line=2, las=0, cex=0.8)\nmtext(\"Responses per Second\", side=4, line=2, las=0, cex=0.8)\ntext(4, 5, \"Bird 131\")\npar(mar=c(5.1, 4.1, 4.1, 2.1), col=\"black\", fg=\"black\", col.axis=\"black\")\n\n# Histogram\n# Random data\nY &lt;- rnorm(50)\n# Make sure no Y exceed [-3.5, 3.5]\nY[Y &lt; -3.5 | Y &gt; 3.5] &lt;- NA # Selection/set range\nx &lt;- seq(-3.5, 3.5, .1)\ndn &lt;- dnorm(x)\npar(mar=c(4.5, 4.1, 3.1, 0))\nhist(Y, breaks=seq(-3.5, 3.5), ylim=c(0, 0.5), \n     col=\"gray80\", freq=FALSE)\nlines(x, dnorm(x), lwd=2)\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n\n# Barplot\npar(mar=c(2, 3.1, 2, 2.1)) \nmidpts &lt;- barplot(VADeaths, \n                  col=gray(0.1 + seq(1, 9, 2)/11), \n                  names=rep(\"\", 4))\nmtext(sub(\" \", \"\\n\", colnames(VADeaths)),\n      at=midpts, side=1, line=0.5, cex=0.5)\ntext(rep(midpts, each=5), apply(VADeaths, 2, cumsum) - VADeaths/2,\n     VADeaths, \n     col=rep(c(\"white\", \"black\"), times=3:2), \n     cex=0.8)\npar(mar=c(5.1, 4.1, 4.1, 2.1))  \n\n# Boxplot\npar(mar=c(3, 4.1, 2, 0))\nboxplot(len ~ dose, data = ToothGrowth,\n        boxwex = 0.25, at = 1:3 - 0.2,\n        subset= supp == \"VC\", col=\"white\",\n        xlab=\"\",\n        ylab=\"tooth length\", ylim=c(0,35))\nmtext(\"Vitamin C dose (mg)\", side=1, line=2.5, cex=0.8)\nboxplot(len ~ dose, data = ToothGrowth, add = TRUE,\n        boxwex = 0.25, at = 1:3 + 0.2,\n        \n        subset= supp == \"OJ\")\nlegend(1.5, 9, c(\"Ascorbic acid\", \"Orange juice\"), \n       fill = c(\"white\", \"gray\"), \n       bty=\"n\")\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n\n# Persp\nx &lt;- seq(-10, 10, length= 30)\ny &lt;- x\nf &lt;- function(x,y) { r &lt;- sqrt(x^2+y^2); 10 * sin(r)/r }\nz &lt;- outer(x, y, f)\nz[is.na(z)] &lt;- 1\n# 0.5 to include z axis label\npar(mar=c(0, 0.5, 0, 0), lwd=0.5)\npersp(x, y, z, theta = 30, phi = 30, \n      expand = 0.5)\npar(mar=c(5.1, 4.1, 4.1, 2.1), lwd=1)\n\n# Piechart\npar(mar=c(0, 2, 1, 2), xpd=FALSE, cex=0.5)\npie.sales &lt;- c(0.12, 0.3, 0.26, 0.16, 0.04, 0.12)\nnames(pie.sales) &lt;- c(\"Blueberry\", \"Cherry\",\n                      \"Apple\", \"Boston Cream\", \"Other\", \"Vanilla\")\npie(pie.sales, col = gray(seq(0.3,1.0,length=6))) \n\n\n\n# Exercise: Can you generate these charts individually?  Try these functions \n# using another dataset. Be sure to work on the layout and margins"
  },
  {
    "objectID": "posts/welcome/home.html",
    "href": "posts/welcome/home.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit imag, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/post-with-code/assignments.html",
    "href": "posts/post-with-code/assignments.html",
    "title": "Assignments",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "homee.html",
    "href": "homee.html",
    "title": "Home",
    "section": "",
    "text": "Assignment 4\n\n\n\n\n\n\n\nAssignment\n\n\n\n\n\n\n\n\n\n\n\nOct 11, 2023\n\n\nFarrah Ali\n\n\n\n\n\n\n  \n\n\n\n\nAssignment 3\n\n\n\n\n\n\n\nAssignment\n\n\n\n\n\n\n\n\n\n\n\nSep 27, 2023\n\n\nFarrah Ali, Tayaba Saleem, Yichao Jin, Grant Powell, & Hoda Elsafadi\n\n\n\n\n\n\n  \n\n\n\n\nAssignment 2\n\n\n\n\n\n\n\nAssignment\n\n\n\n\n\n\n\n\n\n\n\nSep 20, 2023\n\n\nFarrah Ali\n\n\n\n\n\n\n  \n\n\n\n\nAssignment 1\n\n\n\n\n\n\n\nAssignment\n\n\n\n\n\n\n\n\n\n\n\nSep 13, 2023\n\n\nFarrah Ali\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/welcome/assignment2.html",
    "href": "posts/welcome/assignment2.html",
    "title": "Assignment 2",
    "section": "",
    "text": "### Paul Murrell's R examples (selected)\n\n## Start plotting from basics \n# Note the order\nplot(pressure, pch=16)  # Can you change pch?\ntext(150, 600, \n     \"Pressure (mm Hg)\\nversus\\nTemperature (Celsius)\")\n\n\n\n#  Examples of standard high-level plots \n#  In each case, extra output is also added using low-level \n#  plotting functions.\n# \n\n# Setting the parameter (3 rows by 2 cols)\npar(mfrow=c(3, 2))\n\n# Scatterplot\n# Note the incremental additions\n\nx &lt;- c(0.5, 2, 4, 8, 12, 16)\ny1 &lt;- c(1, 1.3, 1.9, 3.4, 3.9, 4.8)\ny2 &lt;- c(4, .8, .5, .45, .4, .3)\n\n# Setting label orientation, margins c(bottom, left, top, right) & text size\npar(las=1, mar=c(4, 4, 2, 4), cex=.7) \nplot.new()\nplot.window(range(x), c(0, 6))\nlines(x, y1)\nlines(x, y2)\npoints(x, y1, pch=16, cex=2) # Try different cex value?  \npoints(x, y2, pch=21, bg=\"white\", cex=2)  # Different background color\npar(col=\"gray50\", fg=\"gray50\", col.axis=\"gray50\")\naxis(1, at=seq(0, 16, 4)) # What is the first number standing for?\naxis(2, at=seq(0, 6, 2))\naxis(4, at=seq(0, 6, 2))\nbox(bty=\"u\")\nmtext(\"Travel Time (s)\", side=1, line=2, cex=0.8)\nmtext(\"Responses per Travel\", side=2, line=2, las=0, cex=0.8)\nmtext(\"Responses per Second\", side=4, line=2, las=0, cex=0.8)\ntext(4, 5, \"Bird 131\")\npar(mar=c(5.1, 4.1, 4.1, 2.1), col=\"black\", fg=\"black\", col.axis=\"black\")\n\n# Histogram\n# Random data\nY &lt;- rnorm(50)\n# Make sure no Y exceed [-3.5, 3.5]\nY[Y &lt; -3.5 | Y &gt; 3.5] &lt;- NA # Selection/set range\nx &lt;- seq(-3.5, 3.5, .1)\ndn &lt;- dnorm(x)\npar(mar=c(4.5, 4.1, 3.1, 0))\nhist(Y, breaks=seq(-3.5, 3.5), ylim=c(0, 0.5), \n     col=\"gray80\", freq=FALSE)\nlines(x, dnorm(x), lwd=2)\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n\n# Barplot\npar(mar=c(2, 3.1, 2, 2.1)) \nmidpts &lt;- barplot(VADeaths, \n                  col=gray(0.1 + seq(1, 9, 2)/11), \n                  names=rep(\"\", 4))\nmtext(sub(\" \", \"\\n\", colnames(VADeaths)),\n      at=midpts, side=1, line=0.5, cex=0.5)\ntext(rep(midpts, each=5), apply(VADeaths, 2, cumsum) - VADeaths/2,\n     VADeaths, \n     col=rep(c(\"white\", \"black\"), times=3:2), \n     cex=0.8)\npar(mar=c(5.1, 4.1, 4.1, 2.1))  \n\n# Boxplot\npar(mar=c(3, 4.1, 2, 0))\nboxplot(len ~ dose, data = ToothGrowth,\n        boxwex = 0.25, at = 1:3 - 0.2,\n        subset= supp == \"VC\", col=\"white\",\n        xlab=\"\",\n        ylab=\"tooth length\", ylim=c(0,35))\nmtext(\"Vitamin C dose (mg)\", side=1, line=2.5, cex=0.8)\nboxplot(len ~ dose, data = ToothGrowth, add = TRUE,\n        boxwex = 0.25, at = 1:3 + 0.2,\n        \n        subset= supp == \"OJ\")\nlegend(1.5, 9, c(\"Ascorbic acid\", \"Orange juice\"), \n       fill = c(\"white\", \"gray\"), \n       bty=\"n\")\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n\n# Persp\nx &lt;- seq(-10, 10, length= 30)\ny &lt;- x\nf &lt;- function(x,y) { r &lt;- sqrt(x^2+y^2); 10 * sin(r)/r }\nz &lt;- outer(x, y, f)\nz[is.na(z)] &lt;- 1\n# 0.5 to include z axis label\npar(mar=c(0, 0.5, 0, 0), lwd=0.5)\npersp(x, y, z, theta = 30, phi = 30, \n      expand = 0.5)\npar(mar=c(5.1, 4.1, 4.1, 2.1), lwd=1)\n\n# Piechart\npar(mar=c(0, 2, 1, 2), xpd=FALSE, cex=0.5)\npie.sales &lt;- c(0.12, 0.3, 0.26, 0.16, 0.04, 0.12)\nnames(pie.sales) &lt;- c(\"Blueberry\", \"Cherry\",\n                      \"Apple\", \"Boston Cream\", \"Other\", \"Vanilla\")\npie(pie.sales, col = gray(seq(0.3,1.0,length=6))) \n\n\n\n# Exercise: Can you generate these charts individually?  Try these functions \n# using another dataset. Be sure to work on the layout and margins"
  },
  {
    "objectID": "posts/Assignment 3.html",
    "href": "posts/Assignment 3.html",
    "title": "Assignment 3",
    "section": "",
    "text": "library(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Direct link to the OWID COVID-19 data CSV file\nowid_url &lt;- \"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.csv\"\n\n# Read the CSV data\nowidall &lt;- read.csv(owid_url)\n\n# Deselect cases/rows with OWID \nowidall &lt;- owidall[!grepl(\"^OWID\", owidall$iso_code), ]  \n\n# Subset by continent: Europe and specific date range\nowideu &lt;- owidall %&gt;%\n  filter(continent == \"Europe\", \n         date &gt;= as.Date(\"2020-01-01\") & date &lt;= as.Date(\"2023-08-31\"))\n\n# Convert 'date' to Date class\nowideu$date &lt;- as.Date(owideu$date)\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(scales)  # for formatting dates\n\n# Create a scatterplot matrix with ggplot2\nscatterplot_matrix &lt;- ggplot(owideu, aes(x = date, y = new_deaths)) +\n  geom_point(na.rm = TRUE, color = \"deeppink\") +  # Exclude missing values from the plot\n  labs(x = \"Date\", y = \"COVID Deaths in Europe (Daily)\") +\n  scale_x_date(labels = scales::date_format(\"%Y-%m\"),\n               breaks = seq(as.Date(\"2020-01-01\"), as.Date(\"2023-08-31\"), by = \"1 month\")) +  # Show every month within the range\n  scale_y_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000),\n                     labels = c(\"0\", \"1000\", \"\", \"3000\", \"\", \"5000\", \"\", \"7000\"),\n                     limits = c(0, 7000)) +  # Customize y-axis tick marks and set limits\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),\n        panel.grid.major = element_blank(),  # Remove major gridlines\n        panel.grid.minor = element_blank(),  # Remove minor gridlines\n        panel.background = element_rect(fill = \"white\"),\n        panel.border = element_rect(color = \"black\", size = 1, fill = NA),  # Add a border\n        axis.ticks.y = element_line(linewidth = 0.5),  # Show y-axis ticks\n        axis.text.y = element_text(size = 12),  # Adjust y-axis labels size\n        axis.title.y = element_text(size = 12)) +\n  geom_text(aes(x = as.Date(\"2020-04-15\"), y = 6000, label = \"Spain\"), size = 3) +\n  geom_text(aes(x = as.Date(\"2020-04-18\"), y = 5000, label = \"Spain\"), size = 3) +\n  geom_text(aes(x = as.Date(\"2020-12-01\"), y = 6500, label = \"Germany\"), size = 3, hjust = -0.1) +\n  geom_text(aes(x = as.Date(\"2021-11-01\"), y = 5000, label = \"Ukraine\"), size = 3,  hjust = -0.1) +\n  geom_text(aes(x = as.Date(\"2023-01-01\"), y = 1500, label = \"Germany\"), size = 3,  hjust = -0.1) +\n  geom_text(aes(x = as.Date(\"2023-09-20\"), y = 500, label = \"Italy\"), size = 3,  hjust = -0.1)\n\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\nprint(scatterplot_matrix)"
  },
  {
    "objectID": "posts/post-with-code/Assignment 3.html",
    "href": "posts/post-with-code/Assignment 3.html",
    "title": "Assignment 3",
    "section": "",
    "text": "library(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Direct link to the OWID COVID-19 data CSV file\nowid_url &lt;- \"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.csv\"\n\n# Read the CSV data\nowidall &lt;- read.csv(owid_url)\n\n# Deselect cases/rows with OWID \nowidall &lt;- owidall[!grepl(\"^OWID\", owidall$iso_code), ]  \n\n# Subset by continent: Europe and specific date range\nowideu &lt;- owidall %&gt;%\n  filter(continent == \"Europe\", \n         date &gt;= as.Date(\"2020-01-01\") & date &lt;= as.Date(\"2023-08-31\"))\n\n# Convert 'date' to Date class\nowideu$date &lt;- as.Date(owideu$date)\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(scales)  # for formatting dates\n\n# Create a scatterplot matrix with ggplot2\nscatterplot_matrix &lt;- ggplot(owideu, aes(x = date, y = new_deaths)) +\n  geom_point(na.rm = TRUE, color = \"deeppink\") +  # Exclude missing values from the plot\n  labs(x = \"Date\", y = \"COVID Deaths in Europe (Daily)\") +\n  scale_x_date(labels = scales::date_format(\"%Y-%m\"),\n               breaks = seq(as.Date(\"2020-01-01\"), as.Date(\"2023-08-31\"), by = \"1 month\")) +  # Show every month within the range\n  scale_y_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000),\n                     labels = c(\"0\", \"1000\", \"\", \"3000\", \"\", \"5000\", \"\", \"7000\"),\n                     limits = c(0, 7000)) +  # Customize y-axis tick marks and set limits\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),\n        panel.grid.major = element_blank(),  # Remove major gridlines\n        panel.grid.minor = element_blank(),  # Remove minor gridlines\n        panel.background = element_rect(fill = \"white\"),\n        panel.border = element_rect(color = \"black\", size = 1, fill = NA),  # Add a border\n        axis.ticks.y = element_line(linewidth = 0.5),  # Show y-axis ticks\n        axis.text.y = element_text(size = 12),  # Adjust y-axis labels size\n        axis.title.y = element_text(size = 12)) +\n  geom_text(aes(x = as.Date(\"2020-04-15\"), y = 6000, label = \"Spain\"), size = 3) +\n  geom_text(aes(x = as.Date(\"2020-04-18\"), y = 5000, label = \"Spain\"), size = 3) +\n  geom_text(aes(x = as.Date(\"2020-12-01\"), y = 6500, label = \"Germany\"), size = 3, hjust = -0.1) +\n  geom_text(aes(x = as.Date(\"2021-11-01\"), y = 5000, label = \"Ukraine\"), size = 3,  hjust = -0.1) +\n  geom_text(aes(x = as.Date(\"2023-01-01\"), y = 1500, label = \"Germany\"), size = 3,  hjust = -0.1) +\n  geom_text(aes(x = as.Date(\"2023-09-20\"), y = 500, label = \"Italy\"), size = 3,  hjust = -0.1)\n\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\nprint(scatterplot_matrix)"
  },
  {
    "objectID": "posts/welcome/Assignment 3.html",
    "href": "posts/welcome/Assignment 3.html",
    "title": "Assignment 3",
    "section": "",
    "text": "library(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Direct link to the OWID COVID-19 data CSV file\nowid_url &lt;- \"https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.csv\"\n\n# Read the CSV data\nowidall &lt;- read.csv(owid_url)\n\n# Deselect cases/rows with OWID \nowidall &lt;- owidall[!grepl(\"^OWID\", owidall$iso_code), ]  \n\n# Subset by continent: Europe and specific date range\nowideu &lt;- owidall %&gt;%\n  filter(continent == \"Europe\", \n         date &gt;= as.Date(\"2020-01-01\") & date &lt;= as.Date(\"2023-08-31\"))\n\n# Convert 'date' to Date class\nowideu$date &lt;- as.Date(owideu$date)\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(scales)  # for formatting dates\n\n# Create a scatterplot matrix with ggplot2\nscatterplot_matrix &lt;- ggplot(owideu, aes(x = date, y = new_deaths)) +\n  geom_point(na.rm = TRUE, color = \"deeppink\") +  # Exclude missing values from the plot\n  labs(x = \"Date\", y = \"COVID Deaths in Europe (Daily)\") +\n  scale_x_date(labels = scales::date_format(\"%Y-%m\"),\n               breaks = seq(as.Date(\"2020-01-01\"), as.Date(\"2023-08-31\"), by = \"1 month\")) +  # Show every month within the range\n  scale_y_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000),\n                     labels = c(\"0\", \"1000\", \"\", \"3000\", \"\", \"5000\", \"\", \"7000\"),\n                     limits = c(0, 7000)) +  # Customize y-axis tick marks and set limits\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),\n        panel.grid.major = element_blank(),  # Remove major gridlines\n        panel.grid.minor = element_blank(),  # Remove minor gridlines\n        panel.background = element_rect(fill = \"white\"),\n        panel.border = element_rect(color = \"black\", size = 1, fill = NA),  # Add a border\n        axis.ticks.y = element_line(linewidth = 0.5),  # Show y-axis ticks\n        axis.text.y = element_text(size = 12),  # Adjust y-axis labels size\n        axis.title.y = element_text(size = 12)) +\n  geom_text(aes(x = as.Date(\"2020-04-15\"), y = 6000, label = \"Spain\"), size = 3) +\n  geom_text(aes(x = as.Date(\"2020-04-18\"), y = 5000, label = \"Spain\"), size = 3) +\n  geom_text(aes(x = as.Date(\"2020-12-01\"), y = 6500, label = \"Germany\"), size = 3, hjust = -0.1) +\n  geom_text(aes(x = as.Date(\"2021-11-01\"), y = 5000, label = \"Ukraine\"), size = 3,  hjust = -0.1) +\n  geom_text(aes(x = as.Date(\"2023-01-01\"), y = 1500, label = \"Germany\"), size = 3,  hjust = -0.1) +\n  geom_text(aes(x = as.Date(\"2023-09-20\"), y = 500, label = \"Italy\"), size = 3,  hjust = -0.1)\n\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\nprint(scatterplot_matrix)"
  },
  {
    "objectID": "Assignment 4.html",
    "href": "Assignment 4.html",
    "title": "Assignment 4",
    "section": "",
    "text": "knitr::opts_chunk$set(echo = TRUE)\n\n## Chart 1\n\n\ndf &lt;- data.frame(Category = c(\"Item1\", \"Item1\", \"Item2\", \"Item2\"),\nVariable = c(\"Var1\", \"Var2\", \"Var1\", \"Var2\"),\nValue = c(15, 10, 12, 8))\nlibrary(ggplot2)\n\nggplot(df, aes(x = Category, y = Value, fill = Variable)) +\ngeom_bar(stat = \"identity\", position = \"dodge\") +\nlabs(title = \"a column chart for Two Items\",\nx = \"Items\",\ny = \"Value\") +\nscale_fill_manual(values = c(\"Var1\" = \"black\", \"Var2\" = \"black\")) +\ntheme_minimal()\n\n\n\n## Chart 3\n\n# Sample data frame\ndata &lt;- data.frame(Item = c(\"Item1\", \"Item2\", \"Item3\", \"Item4\",\"Item5\",\"item6\",\"item7\",\"item8\"),\nValue1 = c(30, 45, 25, 60, 35,40,31,37),\nValue2 = c(20, 40, 50, 30, 45,21,65,35))\n\n# Load the ggplot2 library\nlibrary(ggplot2)\n\n# Create the first horizontal bar chart\nchart1 &lt;- ggplot(data, aes(x = Value1, y = Item, fill = Item)) +\ngeom_bar(stat = \"identity\", orientation = \"y\") +\nlabs(title = \"\", x = \"Value\", y = \"Item\") +\ntheme_minimal() +\ntheme(axis.text.y = element_text(hjust = 1)) # Right-align item labels\n\n# Create the second horizontal bar chart\nchart2 &lt;- ggplot(data, aes(x = Value2, y = Item, fill = Item)) +\ngeom_bar(stat = \"identity\", orientation = \"y\") +\nlabs(title = \"\", x = \"Value\", y = \"Item\") +\ntheme_minimal() +\ntheme(axis.text.y = element_text(hjust = 1)) # Right-align item labels\n\n# Display the charts side by side\nlibrary(gridExtra)\n\ngrid.arrange(chart1, chart2, ncol = 2)\n\n\n\n## Chart 4\n\n# Sample data frame\ndata &lt;- data.frame(Item = c(\"Item1\", \"Item2\", \"Item3\"),\nVariable1 = c(10, 15, 20),\nVariable2 = c(5, 8, 12))\n\n# Load the ggplot2 library\nlibrary(ggplot2)\n\n# Reshape the data from wide to long format using tidyr\nlibrary(tidyr)\ndata_long &lt;- pivot_longer(data, cols = starts_with(\"Variable\"),\nnames_to = \"Variable\",\nvalues_to = \"Value\")\n\n# Create the grouped bar chart\nggplot(data_long, aes(x = Item, y = Value, fill = Variable)) +\ngeom_bar(stat = \"identity\", position = position_dodge(width = 0.9)) +\nlabs(title = \"Comparison of Variables for Three Items\",\nx = \"Items\",\ny = \"Value\") +\ntheme_minimal()"
  },
  {
    "objectID": "posts/welcome/Assignment 4.html",
    "href": "posts/welcome/Assignment 4.html",
    "title": "Assignment 4",
    "section": "",
    "text": "knitr::opts_chunk$set(echo = TRUE)\n\n## Chart 1\n\n\ndf &lt;- data.frame(Category = c(\"Item1\", \"Item1\", \"Item2\", \"Item2\"),\nVariable = c(\"Var1\", \"Var2\", \"Var1\", \"Var2\"),\nValue = c(15, 10, 12, 8))\nlibrary(ggplot2)\n\nggplot(df, aes(x = Category, y = Value, fill = Variable)) +\ngeom_bar(stat = \"identity\", position = \"dodge\") +\nlabs(title = \"a column chart for Two Items\",\nx = \"Items\",\ny = \"Value\") +\nscale_fill_manual(values = c(\"Var1\" = \"black\", \"Var2\" = \"black\")) +\ntheme_minimal()\n\n\n\n## Chart 3\n\n# Sample data frame\ndata &lt;- data.frame(Item = c(\"Item1\", \"Item2\", \"Item3\", \"Item4\",\"Item5\",\"item6\",\"item7\",\"item8\"),\nValue1 = c(30, 45, 25, 60, 35,40,31,37),\nValue2 = c(20, 40, 50, 30, 45,21,65,35))\n\n# Load the ggplot2 library\nlibrary(ggplot2)\n\n# Create the first horizontal bar chart\nchart1 &lt;- ggplot(data, aes(x = Value1, y = Item, fill = Item)) +\ngeom_bar(stat = \"identity\", orientation = \"y\") +\nlabs(title = \"\", x = \"Value\", y = \"Item\") +\ntheme_minimal() +\ntheme(axis.text.y = element_text(hjust = 1)) # Right-align item labels\n\n# Create the second horizontal bar chart\nchart2 &lt;- ggplot(data, aes(x = Value2, y = Item, fill = Item)) +\ngeom_bar(stat = \"identity\", orientation = \"y\") +\nlabs(title = \"\", x = \"Value\", y = \"Item\") +\ntheme_minimal() +\ntheme(axis.text.y = element_text(hjust = 1)) # Right-align item labels\n\n# Display the charts side by side\nlibrary(gridExtra)\n\ngrid.arrange(chart1, chart2, ncol = 2)\n\n\n\n## Chart 4\n\n# Sample data frame\ndata &lt;- data.frame(Item = c(\"Item1\", \"Item2\", \"Item3\"),\nVariable1 = c(10, 15, 20),\nVariable2 = c(5, 8, 12))\n\n# Load the ggplot2 library\nlibrary(ggplot2)\n\n# Reshape the data from wide to long format using tidyr\nlibrary(tidyr)\ndata_long &lt;- pivot_longer(data, cols = starts_with(\"Variable\"),\nnames_to = \"Variable\",\nvalues_to = \"Value\")\n\n# Create the grouped bar chart\nggplot(data_long, aes(x = Item, y = Value, fill = Variable)) +\ngeom_bar(stat = \"identity\", position = position_dodge(width = 0.9)) +\nlabs(title = \"Comparison of Variables for Three Items\",\nx = \"Items\",\ny = \"Value\") +\ntheme_minimal()"
  },
  {
    "objectID": "posts/welcome/assignment1.html",
    "href": "posts/welcome/assignment1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "# Title Fall color\n# Credit: https://fronkonstin.com\n\n# Install packages\n\noptions(repos = c(CRAN = \"https://cran.r-project.org\"))\n\ninstall.packages(\"gsubfn\")\n\nInstalling package into '/Users/farrah/Library/R/x86_64/4.3/library'\n(as 'lib' is unspecified)\n\n\n\nThe downloaded binary packages are in\n    /var/folders/4p/v4wqdtcs7k9gr2d4kv8lt2cm0000gn/T//Rtmpbrrb0x/downloaded_packages\n\ninstall.packages(\"tidyverse\")\n\nInstalling package into '/Users/farrah/Library/R/x86_64/4.3/library'\n(as 'lib' is unspecified)\n\n\n\nThe downloaded binary packages are in\n    /var/folders/4p/v4wqdtcs7k9gr2d4kv8lt2cm0000gn/T//Rtmpbrrb0x/downloaded_packages\n\nlibrary(gsubfn)\n\nLoading required package: proto\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Define elements in plant art\n# Each image corresponds to a different axiom, rules, angle and depth\n\n# Leaf of Fall\n\naxiom=\"X\"\nrules=list(\"X\"=\"F-[[X]+X]+F[+FX]-X\", \"F\"=\"FF\")\nangle=22.5\ndepth=6\n\n\nfor (i in 1:depth) axiom=gsubfn(\".\", rules, axiom)\n\nactions=str_extract_all(axiom, \"\\\\d*\\\\+|\\\\d*\\\\-|F|L|R|\\\\[|\\\\]|\\\\|\") %&gt;% unlist\n\nstatus=data.frame(x=numeric(0), y=numeric(0), alfa=numeric(0))\npoints=data.frame(x1 = 0, y1 = 0, x2 = NA, y2 = NA, alfa=90, depth=1)\n\n\n# Generating data\n# Note: may take a minute or two\n\nfor (action in actions)\n{\n  if (action==\"F\")\n  {\n    x=points[1, \"x1\"]+cos(points[1, \"alfa\"]*(pi/180))\n    y=points[1, \"y1\"]+sin(points[1, \"alfa\"]*(pi/180))\n    points[1,\"x2\"]=x\n    points[1,\"y2\"]=y\n    data.frame(x1 = x, y1 = y, x2 = NA, y2 = NA,\n               alfa=points[1, \"alfa\"],\n               depth=points[1,\"depth\"]) %&gt;% rbind(points)-&gt;points\n  }\n  if (action %in% c(\"+\", \"-\")){\n    alfa=points[1, \"alfa\"]\n    points[1, \"alfa\"]=eval(parse(text=paste0(\"alfa\",action, angle)))\n  }\n  if(action==\"[\"){\n    data.frame(x=points[1, \"x1\"], y=points[1, \"y1\"], alfa=points[1, \"alfa\"]) %&gt;%\n      rbind(status) -&gt; status\n    points[1, \"depth\"]=points[1, \"depth\"]+1\n  }\n\n  if(action==\"]\"){\n    depth=points[1, \"depth\"]\n    points[-1,]-&gt;points\n    data.frame(x1=status[1, \"x\"], y1=status[1, \"y\"], x2=NA, y2=NA,\n               alfa=status[1, \"alfa\"],\n               depth=depth-1) %&gt;%\n      rbind(points) -&gt; points\n    status[-1,]-&gt;status\n  }\n}\n\nggplot() +\n  geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2),\n               lineend = \"round\",\n               color=\"#2C4D31\", # Set your own Fall color?\n               data=na.omit(points)) +\n  coord_fixed(ratio = 1) +\n  theme_void() # No grid nor axes"
  },
  {
    "objectID": "Assignment5.html",
    "href": "Assignment5.html",
    "title": "Assignment 5",
    "section": "",
    "text": "library(ggplot2)\ndata(diamonds)\n\n#histogram:\nhist(diamonds$price, main = \"Histogram of Diamond Prices\", xlab = \"Price\", col = \"lightblue\", border = \"black\")\n\n\n\n#barchart vertical:\ncounts &lt;- table(diamonds$cut)\nbarplot(counts, main = \"Bar Chart of Diamond Cuts\", xlab = \"Cut\", ylab = \"Frequency\", col = \"lightblue\", border = \"black\")\n\n\n\n#barchart horizontal:\nbarplot(counts, horiz = TRUE, main = \"Horizontal Bar Chart of Diamond Cuts\", xlab = \"Frequency\", ylab = \"Cut\", col = \"lightblue\", border = \"black\")\n\n\n\n#piechart:\npie(counts, main = \"Pie Chart of Diamond Cuts\", col = rainbow(length(counts)))\n\n\n\n#boxplot\nboxplot(price ~ cut, data = diamonds, main = \"Boxplot of Diamond Prices by Cut\", xlab = \"Cut\", ylab = \"Price\", col = \"lightblue\")\n\n\n\n#scatterplot\nplot(diamonds$carat, diamonds$price, main = \"Scatterplot of Price vs Carat\", xlab = \"Carat\", ylab = \"Price\", col = \"blue\", pch = 16)\n\n\n\n#Now using ggplot2:\n\n#histogram:\nhistogram &lt;- ggplot(diamonds, aes(price)) + geom_histogram(binwidth=500, fill=\"lightblue\") + ggtitle(\"Histogram of Diamond Prices\")\nprint(histogram)\n\n\n\n#barchart vertical:\nbarvert &lt;- ggplot(diamonds, aes(cut)) + geom_bar(fill=\"lightblue\") + ggtitle(\"Bar Chart of Diamond Cuts\")\nprint(barvert)\n\n\n\n#barchart horizontal:\nbarhori &lt;- ggplot(diamonds, aes(x=cut)) + geom_bar(fill=\"lightblue\") + coord_flip() + ggtitle(\"Horizontal Bar Chart of Diamond Cuts\")\nprint(barhori)\n\n\n\n#piechart:\npiechart &lt;- ggplot(diamonds, aes(x = \"\", fill = cut)) + geom_bar(width = 1) + coord_polar(theta = \"y\") + ggtitle(\"Pie Chart of Diamond Cuts\")\nprint(piechart)\n\n\n\n#boxplot:\nboxplot &lt;- ggplot(diamonds, aes(x=cut, y=price)) + geom_boxplot(fill=\"lightblue\") + ggtitle(\"Boxplot of Diamond Prices by Cut\")\nprint(boxplot)\n\n\n\n#scatterplot:\nscatterplot &lt;- ggplot(diamonds, aes(x=carat, y=price)) + geom_point(alpha=0.5, color=\"blue\") + ggtitle(\"Scatterplot of Price vs Carat\")\nprint(scatterplot)\n\n\n\n#export charts:\n\n#.pdf:\nggsave(filename=\"histogram.pdf\", plot=histogram)\n\nSaving 7 x 5 in image\n\n#.jpg:\nggsave(filename=\"barvert.jpg\", plot=barvert)\n\nSaving 7 x 5 in image\n\n#.tiff:\nggsave(filename=\"piechart.tiff\", plot=piechart)\n\nSaving 7 x 5 in image\n\n#.png\nggsave(filename=\"boxplot.png\", plot=boxplot)\n\nSaving 7 x 5 in image"
  },
  {
    "objectID": "posts/welcome/Assignment5.html",
    "href": "posts/welcome/Assignment5.html",
    "title": "Assignment 5",
    "section": "",
    "text": "library(ggplot2)\ndata(diamonds)\n\n#histogram:\nhist(diamonds$price, main = \"Histogram of Diamond Prices\", xlab = \"Price\", col = \"lightblue\", border = \"black\")\n\n\n\n#barchart vertical:\ncounts &lt;- table(diamonds$cut)\nbarplot(counts, main = \"Bar Chart of Diamond Cuts\", xlab = \"Cut\", ylab = \"Frequency\", col = \"lightblue\", border = \"black\")\n\n\n\n#barchart horizontal:\nbarplot(counts, horiz = TRUE, main = \"Horizontal Bar Chart of Diamond Cuts\", xlab = \"Frequency\", ylab = \"Cut\", col = \"lightblue\", border = \"black\")\n\n\n\n#piechart:\npie(counts, main = \"Pie Chart of Diamond Cuts\", col = rainbow(length(counts)))\n\n\n\n#boxplot\nboxplot(price ~ cut, data = diamonds, main = \"Boxplot of Diamond Prices by Cut\", xlab = \"Cut\", ylab = \"Price\", col = \"lightblue\")\n\n\n\n#scatterplot\nplot(diamonds$carat, diamonds$price, main = \"Scatterplot of Price vs Carat\", xlab = \"Carat\", ylab = \"Price\", col = \"blue\", pch = 16)\n\n\n\n#Now using ggplot2:\n\n#histogram:\nhistogram &lt;- ggplot(diamonds, aes(price)) + geom_histogram(binwidth=500, fill=\"lightblue\") + ggtitle(\"Histogram of Diamond Prices\")\nprint(histogram)\n\n\n\n#barchart vertical:\nbarvert &lt;- ggplot(diamonds, aes(cut)) + geom_bar(fill=\"lightblue\") + ggtitle(\"Bar Chart of Diamond Cuts\")\nprint(barvert)\n\n\n\n#barchart horizontal:\nbarhori &lt;- ggplot(diamonds, aes(x=cut)) + geom_bar(fill=\"lightblue\") + coord_flip() + ggtitle(\"Horizontal Bar Chart of Diamond Cuts\")\nprint(barhori)\n\n\n\n#piechart:\npiechart &lt;- ggplot(diamonds, aes(x = \"\", fill = cut)) + geom_bar(width = 1) + coord_polar(theta = \"y\") + ggtitle(\"Pie Chart of Diamond Cuts\")\nprint(piechart)\n\n\n\n#boxplot:\nboxplot &lt;- ggplot(diamonds, aes(x=cut, y=price)) + geom_boxplot(fill=\"lightblue\") + ggtitle(\"Boxplot of Diamond Prices by Cut\")\nprint(boxplot)\n\n\n\n#scatterplot:\nscatterplot &lt;- ggplot(diamonds, aes(x=carat, y=price)) + geom_point(alpha=0.5, color=\"blue\") + ggtitle(\"Scatterplot of Price vs Carat\")\nprint(scatterplot)\n\n\n\n#export charts:\n\n#.pdf:\nggsave(filename=\"histogram.pdf\", plot=histogram)\n\nSaving 7 x 5 in image\n\n#.jpg:\nggsave(filename=\"barvert.jpg\", plot=barvert)\n\nSaving 7 x 5 in image\n\n#.tiff:\nggsave(filename=\"piechart.tiff\", plot=piechart)\n\nSaving 7 x 5 in image\n\n#.png\nggsave(filename=\"boxplot.png\", plot=boxplot)\n\nSaving 7 x 5 in image"
  },
  {
    "objectID": "posts/welcome/assignment6.html",
    "href": "posts/welcome/assignment6.html",
    "title": "Assignment 6",
    "section": "",
    "text": "Here are the links to my Shiny apps. Thank you!\nRunning sample data sets app:\nhttps://ohbmp2-farrahahmadali.shinyapps.io/test/\nMy profile app:\nhttps://ohbmp2-farrahahmadali.shinyapps.io/farrahaliapp/"
  },
  {
    "objectID": "projectproposal.html",
    "href": "projectproposal.html",
    "title": "Project Proposal",
    "section": "",
    "text": "https://www.slideshare.net/farrahahmadali/epps-6356-project-proposalpptx"
  },
  {
    "objectID": "posts/welcome/projectproposal.html",
    "href": "posts/welcome/projectproposal.html",
    "title": "Project Proposal",
    "section": "",
    "text": "Please find the link for our group’s project proposal here.\nhttps://www.slideshare.net/farrahahmadali/epps-6356-project-proposalpptx"
  },
  {
    "objectID": "finalprojectvisuals.html",
    "href": "finalprojectvisuals.html",
    "title": "Assignment 8",
    "section": "",
    "text": "lacrime &lt;- read.csv('finallacrime.csv')\n\n\n# Install and load required packages\n#install.packages(\"ggplot2\")\nlibrary(ggplot2)\n\n# Assuming your data frame is named 'lacrime'\n# Convert Vict.Descent to a new column 'EthnicityGroup' based on the specified criteria\nlacrime$EthnicityGroup &lt;- ifelse(lacrime$Vict.Descent %in% c(\"A\", \"C\", \"F\", \"J\", \"K\", \"V\"), \"Asian\",\n                                  ifelse(lacrime$Vict.Descent == \"B\", \"Black\",\n                                         ifelse(lacrime$Vict.Descent == \"H\", \"Hispanic\",\n                                                ifelse(lacrime$Vict.Descent == \"I\", \"American Indian\",\n                                                       ifelse(lacrime$Vict.Descent == \"O\", \"Others\",\n                                                              ifelse(lacrime$Vict.Descent == \"W\", \"White\", lacrime$Vict.Descent)\n                                                       )\n                                                )\n                                         )\n                                  )\n)\n\n# Filter data for Asian ethnicity and exclude the year 2022\nasian_data &lt;- lacrime[lacrime$Ethnicity == \"Asian\" & lacrime$Year %in% c(2020, 2021), ]\n\n# Create a bar chart with modified x-axis and light pink color\ngg &lt;- ggplot(asian_data, aes(x = as.factor(Year), fill = factor(Year))) +\n  geom_bar(color = \"black\", fill = \"lightblue\") +\n  scale_x_discrete(breaks = c(\"2020\", \"2021\")) +\n  labs(title = \"Total Number of Asian Victims by Year\",\n       x = \"Year\",\n       y = \"Total Number of Victims\") +\n  theme_minimal()\n\n# Create a bar chart with modified data labels (with commas and decimal places)\ngg + geom_text(\n  aes(label = sprintf(\"%s (%.1f%%)\", format(..count.., big.mark = \",\"), ..count.. / sum(..count..) * 100)),\n  position = position_stack(vjust = 0.5),\n  stat = \"count\",\n  color = \"black\"\n)\n\nWarning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(count)` instead.\n\n\n\n\n\n\n# Install and load required packages\n#install.packages(\"ggplot2\")\nlibrary(ggplot2)\n\n# Assuming your data frame is named 'lacrime'\n# Convert Vict.Descent to a new column 'EthnicityGroup' based on the specified criteria\nlacrime$EthnicityGroup &lt;- ifelse(lacrime$Vict.Descent %in% c(\"A\", \"C\", \"F\", \"J\", \"K\", \"V\"), \"Asian\",\n                                  ifelse(lacrime$Vict.Descent == \"B\", \"Black\",\n                                         ifelse(lacrime$Vict.Descent == \"H\", \"Hispanic\",\n                                                ifelse(lacrime$Vict.Descent == \"I\", \"American Indian\",\n                                                       ifelse(lacrime$Vict.Descent == \"O\", \"Others\",\n                                                              ifelse(lacrime$Vict.Descent == \"W\", \"White\", lacrime$Vict.Descent)\n                                                       )\n                                                )\n                                         )\n                                  )\n)\n\n# Filter data for Asian ethnicity and exclude the year 2022\nasian_data &lt;- lacrime[lacrime$Ethnicity == \"Black\" & lacrime$Year %in% c(2020, 2021), ]\n\n# Create a bar chart with modified x-axis and light pink color\ngg &lt;- ggplot(asian_data, aes(x = as.factor(Year), fill = factor(Year))) +\n  geom_bar(color = \"black\", fill = \"Gray\") +\n  scale_x_discrete(breaks = c(\"2020\", \"2021\")) +\n  labs(title = \"Total Number of Black Victims by Year\",\n       x = \"Year\",\n       y = \"Total Number of Victims\") +\n  theme_minimal()\n\n# Create a bar chart with modified data labels (with commas and decimal places)\ngg + geom_text(\n  aes(label = sprintf(\"%s (%.1f%%)\", format(..count.., big.mark = \",\"), ..count.. / sum(..count..) * 100)),\n  position = position_stack(vjust = 0.5),\n  stat = \"count\",\n  color = \"black\"\n)\n\n\n\n\n\n# Install and load required packages\n#install.packages(\"ggplot2\")\nlibrary(ggplot2)\n\n# Assuming your data frame is named 'lacrime'\n# Convert Vict.Descent to a new column 'EthnicityGroup' based on the specified criteria\nlacrime$EthnicityGroup &lt;- ifelse(lacrime$Vict.Descent %in% c(\"A\", \"C\", \"F\", \"J\", \"K\", \"V\"), \"Asian\",\n                                  ifelse(lacrime$Vict.Descent == \"B\", \"Black\",\n                                         ifelse(lacrime$Vict.Descent == \"H\", \"Hispanic\",\n                                                ifelse(lacrime$Vict.Descent == \"I\", \"American Indian\",\n                                                       ifelse(lacrime$Vict.Descent == \"O\", \"Others\",\n                                                              ifelse(lacrime$Vict.Descent == \"W\", \"White\", lacrime$Vict.Descent)\n                                                       )\n                                                )\n                                         )\n                                  )\n)\n\n# Filter data for Asian ethnicity and exclude the year 2022\nasian_data &lt;- lacrime[lacrime$Ethnicity == \"White\" & lacrime$Year %in% c(2020, 2021), ]\n\n# Create a bar chart with modified x-axis and light pink color\ngg &lt;- ggplot(asian_data, aes(x = as.factor(Year), fill = factor(Year))) +\n  geom_bar(color = \"black\", fill = \"White\") +\n  scale_x_discrete(breaks = c(\"2020\", \"2021\")) +\n  labs(title = \"Total Number of White Victims by Year\",\n       x = \"Year\",\n       y = \"Total Number of Victims\") +\n  theme_minimal()\n\n# Create a bar chart with modified data labels (with commas and decimal places)\ngg + geom_text(\n  aes(label = sprintf(\"%s (%.1f%%)\", format(..count.., big.mark = \",\"), ..count.. / sum(..count..) * 100)),\n  position = position_stack(vjust = 0.5),\n  stat = \"count\",\n  color = \"black\"\n)\n\n\n\n\n\n# Install and load required packages\n#install.packages(c(\"ggplot2\", \"lubridate\", \"scales\"))\nlibrary(ggplot2)\nlibrary(lubridate)\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\nlibrary(scales)\n\n# Convert DATE.OCC to a Date object\nlacrime$DATE.OCC &lt;- as.Date(lacrime$DATE.OCC, format = \"%m/%d/%Y\")\n\n# Filter the data on Asian ethnicity and exclude the year 2022\nasian_data &lt;- lacrime[lacrime$Vict.Descent %in% c(\"A\", \"C\", \"F\", \"J\", \"K\", \"V\") & year(lacrime$DATE.OCC) != 2022, ]\n\n# Create a new column 'MonthYear' by combining Month and Year\nasian_data$MonthYear &lt;- format(asian_data$DATE.OCC, \"%Y-%m\")\n\n# Create a bar chart with light blue color and labels with commas, remove the legend\nggplot(asian_data, aes(x = MonthYear, fill = \"lightblue\")) +\n  geom_bar() +\n  geom_text(stat = \"count\", aes(label = comma(after_stat(count))), vjust = -0.5) +\n  labs(title = \"Total Number of Asian Victims by Month and Year\",\n       x = \"Month-Year\",\n       y = \"Total Number of Victims\") +\n  theme_minimal() +\n  theme(legend.position = \"none\") +\n  scale_fill_manual(values = \"lightblue\")\n\n\n\n\n\n# Convert DATE.OCC to a Date object\nlacrime$DATE.OCC &lt;- as.Date(lacrime$DATE.OCC, format = \"%m/%d/%Y\")\n\n# Filter the data on Black ethnicity and exclude the year 2022\nblack_data &lt;- lacrime[lacrime$Vict.Descent %in% c(\"B\") & year(lacrime$DATE.OCC) != 2022, ]\n\n# Create a new column 'MonthYear' by combining Month and Year\nblack_data$MonthYear &lt;- format(black_data$DATE.OCC, \"%Y-%m\")\n\n# Create a bar chart with gray fill color and labels with commas, remove the legend\nggplot(black_data, aes(x = MonthYear, fill = \"Gray\")) +\n  geom_bar() +\n  geom_text(stat = \"count\", aes(label = comma(after_stat(count))), vjust = -0.5) +\n  labs(title = \"Total Number of Black Victims by Month and Year\",\n       x = \"Month-Year\",\n       y = \"Total Number of Victims\") +\n  theme_minimal() +\n  theme(legend.position = \"none\") +\n  scale_fill_manual(values = \"gray\")\n\n\n\n\n\n# Convert DATE.OCC to a Date object\nlacrime$DATE.OCC &lt;- as.Date(lacrime$DATE.OCC, format = \"%m/%d/%Y\")\n\n# Filter the data on White ethnicity and exclude the year 2022\nwhite_data &lt;- lacrime[lacrime$Vict.Descent %in% c(\"W\") & year(lacrime$DATE.OCC) != 2022, ]\n\n# Create a new column 'MonthYear' by combining Month and Year\nwhite_data$MonthYear &lt;- format(white_data$DATE.OCC, \"%Y-%m\")\n\n# Create a bar chart with gray fill color and labels with commas, remove the legend\nggplot(white_data, aes(x = MonthYear, fill = \"lightpink\")) +\n  geom_bar() +\n  geom_text(stat = \"count\", aes(label = comma(after_stat(count))), vjust = -0.5) +\n  labs(title = \"Total Number of White Victims by Month and Year\",\n       x = \"Month-Year\",\n       y = \"Total Number of Victims\") +\n  theme_minimal() +\n  theme(legend.position = \"none\") +\n  scale_fill_manual(values = \"lightpink\")\n\n\n\n\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n#lacrime &lt;- lacrime[2:148206, ]\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"\"] &lt;- \"X\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"C\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"F\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"J\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"K\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"V\"] &lt;- \"A\"\n\nfiltered_data &lt;- lacrime %&gt;% filter(Vict.Descent == \"A\")\n\ndates_for_letter_A &lt;- filtered_data$DATE.OCC\n\nfiltered_data$DATE.OCC &lt;- as.Date(filtered_data$DATE.OCC)\n\nsummary_data &lt;- filtered_data %&gt;%\n  group_by(DATE.OCC) %&gt;%\n  summarize(Count = n())\n\nplot(summary_data$DATE.OCC, summary_data$Count, type = \"p\", pch = 1, cex = 0.4,\n     col = \"blue\", xlab = \"Date Occurred\", ylab = \"Number of Victims\", \n     main = \"Number of Asian Victims Daily in Los Angeles 2020\", mgp = c(3, 1, 0),\n     xaxt = \"n\", yaxt = \"n\")\naxis(1, at = seq(min(summary_data$DATE.OCC), max(summary_data$DATE.OCC), by = \"month\"), \n     labels = format(seq(min(summary_data$DATE.OCC), max(summary_data$DATE.OCC), by = \"month\"), \"%b %Y\"), cex.axis = 0.4)\naxis(2, las = 0, cex.axis = 0.4)\n\nlockdown_date &lt;- as.Date(\"2020-03-19\")\ntext(x = lockdown_date, y = max(summary_data$Count), labels = \"Lockdown 3/19\", pos = 1, offset = 1, cex = 0.4)\n\ntravel_ban &lt;- as.Date(\"2020-01-31\")\ntext(x = travel_ban, y = 39, labels = \"Travel Ban 1/31\", pos = 1, offset = 1, cex = 0.4)\n\nmodel &lt;- lm(summary_data$Count ~ as.numeric(summary_data$DATE.OCC))\nabline(model, col = \"red\")\n\n\n\n\n\n#lacrime &lt;- lacrime[2:148206, ]\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"\"] &lt;- \"X\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"C\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"F\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"J\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"K\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"V\"] &lt;- \"A\"\n\nfiltered_data &lt;- lacrime %&gt;% filter(Vict.Descent == \"W\")\n\ndates_for_letter_A &lt;- filtered_data$DATE.OCC\n\nfiltered_data$DATE.OCC &lt;- as.Date(filtered_data$DATE.OCC)\n\nsummary_data &lt;- filtered_data %&gt;%\n  group_by(DATE.OCC) %&gt;%\n  summarize(Count = n())\n\nplot(summary_data$DATE.OCC, summary_data$Count, type = \"p\", pch = 1, cex = 0.4,\n     col = \"blue\", xlab = \"Date Occurred\", ylab = \"Number of Victims\", \n     main = \"Number of White Victims Daily in Los Angeles 2020\", mgp = c(3, 1, 0),\n     xaxt = \"n\", yaxt = \"n\")\naxis(1, at = seq(min(summary_data$DATE.OCC), max(summary_data$DATE.OCC), by = \"month\"), \n     labels = format(seq(min(summary_data$DATE.OCC), max(summary_data$DATE.OCC), by = \"month\"), \"%b %Y\"), cex.axis = 0.4)\naxis(2, las = 0, cex.axis = 0.4)\n\n#lockdown_date &lt;- as.Date(\"2020-03-19\")\n#text(x = lockdown_date, y = max(summary_data$Count), labels = \"Lockdown 3/19\", pos = 1, offset = 1, cex = 0.4)\n\n#travel_ban &lt;- as.Date(\"2020-01-31\")\n#text(x = travel_ban, y = 39, labels = \"Travel Ban 1/31\", pos = 1, offset = 1, cex = 0.4)\n\nmodel &lt;- lm(summary_data$Count ~ as.numeric(summary_data$DATE.OCC))\nabline(model, col = \"red\")\n\n\n\n\n\nlibrary(dplyr)\n\n#lacrime &lt;- lacrime[2:148206, ]\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"\"] &lt;- \"X\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"C\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"F\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"J\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"K\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"V\"] &lt;- \"A\"\n\nfiltered_data &lt;- lacrime %&gt;% filter(Vict.Descent == \"B\")\n\ndates_for_letter_A &lt;- filtered_data$DATE.OCC\n\nfiltered_data$DATE.OCC &lt;- as.Date(filtered_data$DATE.OCC)\n\nsummary_data &lt;- filtered_data %&gt;%\n  group_by(DATE.OCC) %&gt;%\n  summarize(Count = n())\n\nplot(summary_data$DATE.OCC, summary_data$Count, type = \"p\", pch = 1, cex = 0.4,\n     col = \"blue\", xlab = \"Date Occurred\", ylab = \"Number of Victims\", \n     main = \"Number of Black Victims Daily in Los Angeles 2020\", mgp = c(3, 1, 0),\n     xaxt = \"n\", yaxt = \"n\")\naxis(1, at = seq(min(summary_data$DATE.OCC), max(summary_data$DATE.OCC), by = \"month\"), \n     labels = format(seq(min(summary_data$DATE.OCC), max(summary_data$DATE.OCC), by = \"month\"), \"%b %Y\"), cex.axis = 0.4)\naxis(2, las = 0, cex.axis = 0.4)\n\n#lockdown_date &lt;- as.Date(\"2020-03-19\")\n#text(x = lockdown_date, y = max(summary_data$Count), labels = \"Lockdown 3/19\", pos = 1, offset = 1, cex = 0.4)\n\n#travel_ban &lt;- as.Date(\"2020-01-31\")\n#text(x = travel_ban, y = 39, labels = \"Travel Ban 1/31\", pos = 1, offset = 1, cex = 0.4)\n\nmodel &lt;- lm(summary_data$Count ~ as.numeric(summary_data$DATE.OCC))\nabline(model, col = \"red\")"
  },
  {
    "objectID": "posts/welcome/Project Presentation.html",
    "href": "posts/welcome/Project Presentation.html",
    "title": "Project Presentation",
    "section": "",
    "text": "Please find the link to out final project presentation below:\nhttps://www.slideshare.net/secret/1HzDqC5y6v4Bfv"
  },
  {
    "objectID": "FinalProjectVisuals.qmd.html",
    "href": "FinalProjectVisuals.qmd.html",
    "title": "Final Project Visuals LA Crime",
    "section": "",
    "text": "lacrime &lt;- read.csv('finallacrime.csv')\n\n\n# Install and load required packages\n#install.packages(\"ggplot2\")\nlibrary(ggplot2)\n\n# Assuming your data frame is named 'lacrime'\n# Convert Vict.Descent to a new column 'EthnicityGroup' based on the specified criteria\nlacrime$EthnicityGroup &lt;- ifelse(lacrime$Vict.Descent %in% c(\"A\", \"C\", \"F\", \"J\", \"K\", \"V\"), \"Asian\",\n                                  ifelse(lacrime$Vict.Descent == \"B\", \"Black\",\n                                         ifelse(lacrime$Vict.Descent == \"H\", \"Hispanic\",\n                                                ifelse(lacrime$Vict.Descent == \"I\", \"American Indian\",\n                                                       ifelse(lacrime$Vict.Descent == \"O\", \"Others\",\n                                                              ifelse(lacrime$Vict.Descent == \"W\", \"White\", lacrime$Vict.Descent)\n                                                       )\n                                                )\n                                         )\n                                  )\n)\n\n# Filter data for Asian ethnicity and exclude the year 2022\nasian_data &lt;- lacrime[lacrime$Ethnicity == \"Asian\" & lacrime$Year %in% c(2020, 2021), ]\n\n# Create a bar chart with modified x-axis and light pink color\ngg &lt;- ggplot(asian_data, aes(x = as.factor(Year), fill = factor(Year))) +\n  geom_bar(color = \"black\", fill = \"lightblue\") +\n  scale_x_discrete(breaks = c(\"2020\", \"2021\")) +\n  labs(title = \"Total Number of Asian Victims by Year\",\n       x = \"Year\",\n       y = \"Total Number of Victims\") +\n  theme_minimal()\n\n# Create a bar chart with modified data labels (with commas and decimal places)\ngg + geom_text(\n  aes(label = sprintf(\"%s (%.1f%%)\", format(..count.., big.mark = \",\"), ..count.. / sum(..count..) * 100)),\n  position = position_stack(vjust = 0.5),\n  stat = \"count\",\n  color = \"black\"\n)\n\nWarning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(count)` instead.\n\n\n\n\n\n\n# Install and load required packages\n#install.packages(\"ggplot2\")\nlibrary(ggplot2)\n\n# Assuming your data frame is named 'lacrime'\n# Convert Vict.Descent to a new column 'EthnicityGroup' based on the specified criteria\nlacrime$EthnicityGroup &lt;- ifelse(lacrime$Vict.Descent %in% c(\"A\", \"C\", \"F\", \"J\", \"K\", \"V\"), \"Asian\",\n                                  ifelse(lacrime$Vict.Descent == \"B\", \"Black\",\n                                         ifelse(lacrime$Vict.Descent == \"H\", \"Hispanic\",\n                                                ifelse(lacrime$Vict.Descent == \"I\", \"American Indian\",\n                                                       ifelse(lacrime$Vict.Descent == \"O\", \"Others\",\n                                                              ifelse(lacrime$Vict.Descent == \"W\", \"White\", lacrime$Vict.Descent)\n                                                       )\n                                                )\n                                         )\n                                  )\n)\n\n# Filter data for Asian ethnicity and exclude the year 2022\nasian_data &lt;- lacrime[lacrime$Ethnicity == \"Black\" & lacrime$Year %in% c(2020, 2021), ]\n\n# Create a bar chart with modified x-axis and light pink color\ngg &lt;- ggplot(asian_data, aes(x = as.factor(Year), fill = factor(Year))) +\n  geom_bar(color = \"black\", fill = \"Gray\") +\n  scale_x_discrete(breaks = c(\"2020\", \"2021\")) +\n  labs(title = \"Total Number of Black Victims by Year\",\n       x = \"Year\",\n       y = \"Total Number of Victims\") +\n  theme_minimal()\n\n# Create a bar chart with modified data labels (with commas and decimal places)\ngg + geom_text(\n  aes(label = sprintf(\"%s (%.1f%%)\", format(..count.., big.mark = \",\"), ..count.. / sum(..count..) * 100)),\n  position = position_stack(vjust = 0.5),\n  stat = \"count\",\n  color = \"black\"\n)\n\n\n\n\n\n# Install and load required packages\n#install.packages(\"ggplot2\")\nlibrary(ggplot2)\n\n# Assuming your data frame is named 'lacrime'\n# Convert Vict.Descent to a new column 'EthnicityGroup' based on the specified criteria\nlacrime$EthnicityGroup &lt;- ifelse(lacrime$Vict.Descent %in% c(\"A\", \"C\", \"F\", \"J\", \"K\", \"V\"), \"Asian\",\n                                  ifelse(lacrime$Vict.Descent == \"B\", \"Black\",\n                                         ifelse(lacrime$Vict.Descent == \"H\", \"Hispanic\",\n                                                ifelse(lacrime$Vict.Descent == \"I\", \"American Indian\",\n                                                       ifelse(lacrime$Vict.Descent == \"O\", \"Others\",\n                                                              ifelse(lacrime$Vict.Descent == \"W\", \"White\", lacrime$Vict.Descent)\n                                                       )\n                                                )\n                                         )\n                                  )\n)\n\n# Filter data for Asian ethnicity and exclude the year 2022\nasian_data &lt;- lacrime[lacrime$Ethnicity == \"White\" & lacrime$Year %in% c(2020, 2021), ]\n\n# Create a bar chart with modified x-axis and light pink color\ngg &lt;- ggplot(asian_data, aes(x = as.factor(Year), fill = factor(Year))) +\n  geom_bar(color = \"black\", fill = \"White\") +\n  scale_x_discrete(breaks = c(\"2020\", \"2021\")) +\n  labs(title = \"Total Number of White Victims by Year\",\n       x = \"Year\",\n       y = \"Total Number of Victims\") +\n  theme_minimal()\n\n# Create a bar chart with modified data labels (with commas and decimal places)\ngg + geom_text(\n  aes(label = sprintf(\"%s (%.1f%%)\", format(..count.., big.mark = \",\"), ..count.. / sum(..count..) * 100)),\n  position = position_stack(vjust = 0.5),\n  stat = \"count\",\n  color = \"black\"\n)\n\n\n\n\n\n# Install and load required packages\n#install.packages(c(\"ggplot2\", \"lubridate\", \"scales\"))\nlibrary(ggplot2)\nlibrary(lubridate)\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\nlibrary(scales)\n\n# Convert DATE.OCC to a Date object\nlacrime$DATE.OCC &lt;- as.Date(lacrime$DATE.OCC, format = \"%m/%d/%Y\")\n\n# Filter the data on Asian ethnicity and exclude the year 2022\nasian_data &lt;- lacrime[lacrime$Vict.Descent %in% c(\"A\", \"C\", \"F\", \"J\", \"K\", \"V\") & year(lacrime$DATE.OCC) != 2022, ]\n\n# Create a new column 'MonthYear' by combining Month and Year\nasian_data$MonthYear &lt;- format(asian_data$DATE.OCC, \"%Y-%m\")\n\n# Create a bar chart with light blue color and labels with commas, remove the legend\nggplot(asian_data, aes(x = MonthYear, fill = \"lightblue\")) +\n  geom_bar() +\n  geom_text(stat = \"count\", aes(label = comma(after_stat(count))), vjust = -0.5) +\n  labs(title = \"Total Number of Asian Victims by Month and Year\",\n       x = \"Month-Year\",\n       y = \"Total Number of Victims\") +\n  theme_minimal() +\n  theme(legend.position = \"none\") +\n  scale_fill_manual(values = \"lightblue\")\n\n\n\n\n\n# Convert DATE.OCC to a Date object\nlacrime$DATE.OCC &lt;- as.Date(lacrime$DATE.OCC, format = \"%m/%d/%Y\")\n\n# Filter the data on Black ethnicity and exclude the year 2022\nblack_data &lt;- lacrime[lacrime$Vict.Descent %in% c(\"B\") & year(lacrime$DATE.OCC) != 2022, ]\n\n# Create a new column 'MonthYear' by combining Month and Year\nblack_data$MonthYear &lt;- format(black_data$DATE.OCC, \"%Y-%m\")\n\n# Create a bar chart with gray fill color and labels with commas, remove the legend\nggplot(black_data, aes(x = MonthYear, fill = \"Gray\")) +\n  geom_bar() +\n  geom_text(stat = \"count\", aes(label = comma(after_stat(count))), vjust = -0.5) +\n  labs(title = \"Total Number of Black Victims by Month and Year\",\n       x = \"Month-Year\",\n       y = \"Total Number of Victims\") +\n  theme_minimal() +\n  theme(legend.position = \"none\") +\n  scale_fill_manual(values = \"gray\")\n\n\n\n\n\n# Convert DATE.OCC to a Date object\nlacrime$DATE.OCC &lt;- as.Date(lacrime$DATE.OCC, format = \"%m/%d/%Y\")\n\n# Filter the data on White ethnicity and exclude the year 2022\nwhite_data &lt;- lacrime[lacrime$Vict.Descent %in% c(\"W\") & year(lacrime$DATE.OCC) != 2022, ]\n\n# Create a new column 'MonthYear' by combining Month and Year\nwhite_data$MonthYear &lt;- format(white_data$DATE.OCC, \"%Y-%m\")\n\n# Create a bar chart with gray fill color and labels with commas, remove the legend\nggplot(white_data, aes(x = MonthYear, fill = \"lightpink\")) +\n  geom_bar() +\n  geom_text(stat = \"count\", aes(label = comma(after_stat(count))), vjust = -0.5) +\n  labs(title = \"Total Number of White Victims by Month and Year\",\n       x = \"Month-Year\",\n       y = \"Total Number of Victims\") +\n  theme_minimal() +\n  theme(legend.position = \"none\") +\n  scale_fill_manual(values = \"lightpink\")\n\n\n\n\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n#lacrime &lt;- lacrime[2:148206, ]\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"\"] &lt;- \"X\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"C\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"F\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"J\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"K\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"V\"] &lt;- \"A\"\n\nfiltered_data &lt;- lacrime %&gt;% filter(Vict.Descent == \"A\")\n\ndates_for_letter_A &lt;- filtered_data$DATE.OCC\n\nfiltered_data$DATE.OCC &lt;- as.Date(filtered_data$DATE.OCC)\n\nsummary_data &lt;- filtered_data %&gt;%\n  group_by(DATE.OCC) %&gt;%\n  summarize(Count = n())\n\nplot(summary_data$DATE.OCC, summary_data$Count, type = \"p\", pch = 1, cex = 0.4,\n     col = \"blue\", xlab = \"Date Occurred\", ylab = \"Number of Victims\", \n     main = \"Number of Asian Victims Daily in Los Angeles 2020\", mgp = c(3, 1, 0),\n     xaxt = \"n\", yaxt = \"n\")\naxis(1, at = seq(min(summary_data$DATE.OCC), max(summary_data$DATE.OCC), by = \"month\"), \n     labels = format(seq(min(summary_data$DATE.OCC), max(summary_data$DATE.OCC), by = \"month\"), \"%b %Y\"), cex.axis = 0.4)\naxis(2, las = 0, cex.axis = 0.4)\n\nlockdown_date &lt;- as.Date(\"2020-03-19\")\ntext(x = lockdown_date, y = max(summary_data$Count), labels = \"Lockdown 3/19\", pos = 1, offset = 1, cex = 0.4)\n\ntravel_ban &lt;- as.Date(\"2020-01-31\")\ntext(x = travel_ban, y = 39, labels = \"Travel Ban 1/31\", pos = 1, offset = 1, cex = 0.4)\n\nmodel &lt;- lm(summary_data$Count ~ as.numeric(summary_data$DATE.OCC))\nabline(model, col = \"red\")\n\n\n\n\n\n#lacrime &lt;- lacrime[2:148206, ]\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"\"] &lt;- \"X\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"C\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"F\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"J\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"K\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"V\"] &lt;- \"A\"\n\nfiltered_data &lt;- lacrime %&gt;% filter(Vict.Descent == \"W\")\n\ndates_for_letter_A &lt;- filtered_data$DATE.OCC\n\nfiltered_data$DATE.OCC &lt;- as.Date(filtered_data$DATE.OCC)\n\nsummary_data &lt;- filtered_data %&gt;%\n  group_by(DATE.OCC) %&gt;%\n  summarize(Count = n())\n\nplot(summary_data$DATE.OCC, summary_data$Count, type = \"p\", pch = 1, cex = 0.4,\n     col = \"blue\", xlab = \"Date Occurred\", ylab = \"Number of Victims\", \n     main = \"Number of White Victims Daily in Los Angeles 2020\", mgp = c(3, 1, 0),\n     xaxt = \"n\", yaxt = \"n\")\naxis(1, at = seq(min(summary_data$DATE.OCC), max(summary_data$DATE.OCC), by = \"month\"), \n     labels = format(seq(min(summary_data$DATE.OCC), max(summary_data$DATE.OCC), by = \"month\"), \"%b %Y\"), cex.axis = 0.4)\naxis(2, las = 0, cex.axis = 0.4)\n\n#lockdown_date &lt;- as.Date(\"2020-03-19\")\n#text(x = lockdown_date, y = max(summary_data$Count), labels = \"Lockdown 3/19\", pos = 1, offset = 1, cex = 0.4)\n\n#travel_ban &lt;- as.Date(\"2020-01-31\")\n#text(x = travel_ban, y = 39, labels = \"Travel Ban 1/31\", pos = 1, offset = 1, cex = 0.4)\n\nmodel &lt;- lm(summary_data$Count ~ as.numeric(summary_data$DATE.OCC))\nabline(model, col = \"red\")\n\n\n\n\n\nlibrary(dplyr)\n\n#lacrime &lt;- lacrime[2:148206, ]\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"\"] &lt;- \"X\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"C\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"F\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"J\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"K\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"V\"] &lt;- \"A\"\n\nfiltered_data &lt;- lacrime %&gt;% filter(Vict.Descent == \"B\")\n\ndates_for_letter_A &lt;- filtered_data$DATE.OCC\n\nfiltered_data$DATE.OCC &lt;- as.Date(filtered_data$DATE.OCC)\n\nsummary_data &lt;- filtered_data %&gt;%\n  group_by(DATE.OCC) %&gt;%\n  summarize(Count = n())\n\nplot(summary_data$DATE.OCC, summary_data$Count, type = \"p\", pch = 1, cex = 0.4,\n     col = \"blue\", xlab = \"Date Occurred\", ylab = \"Number of Victims\", \n     main = \"Number of Black Victims Daily in Los Angeles 2020\", mgp = c(3, 1, 0),\n     xaxt = \"n\", yaxt = \"n\")\naxis(1, at = seq(min(summary_data$DATE.OCC), max(summary_data$DATE.OCC), by = \"month\"), \n     labels = format(seq(min(summary_data$DATE.OCC), max(summary_data$DATE.OCC), by = \"month\"), \"%b %Y\"), cex.axis = 0.4)\naxis(2, las = 0, cex.axis = 0.4)\n\n#lockdown_date &lt;- as.Date(\"2020-03-19\")\n#text(x = lockdown_date, y = max(summary_data$Count), labels = \"Lockdown 3/19\", pos = 1, offset = 1, cex = 0.4)\n\n#travel_ban &lt;- as.Date(\"2020-01-31\")\n#text(x = travel_ban, y = 39, labels = \"Travel Ban 1/31\", pos = 1, offset = 1, cex = 0.4)\n\nmodel &lt;- lm(summary_data$Count ~ as.numeric(summary_data$DATE.OCC))\nabline(model, col = \"red\")"
  },
  {
    "objectID": "posts/welcome/finalprojectvisuals.html",
    "href": "posts/welcome/finalprojectvisuals.html",
    "title": "Assignment 8",
    "section": "",
    "text": "lacrime &lt;- read.csv('finallacrime.csv')\n\n\n# Install and load required packages\n#install.packages(\"ggplot2\")\nlibrary(ggplot2)\n\n# Assuming your data frame is named 'lacrime'\n# Convert Vict.Descent to a new column 'EthnicityGroup' based on the specified criteria\nlacrime$EthnicityGroup &lt;- ifelse(lacrime$Vict.Descent %in% c(\"A\", \"C\", \"F\", \"J\", \"K\", \"V\"), \"Asian\",\n                                  ifelse(lacrime$Vict.Descent == \"B\", \"Black\",\n                                         ifelse(lacrime$Vict.Descent == \"H\", \"Hispanic\",\n                                                ifelse(lacrime$Vict.Descent == \"I\", \"American Indian\",\n                                                       ifelse(lacrime$Vict.Descent == \"O\", \"Others\",\n                                                              ifelse(lacrime$Vict.Descent == \"W\", \"White\", lacrime$Vict.Descent)\n                                                       )\n                                                )\n                                         )\n                                  )\n)\n\n# Filter data for Asian ethnicity and exclude the year 2022\nasian_data &lt;- lacrime[lacrime$Ethnicity == \"Asian\" & lacrime$Year %in% c(2020, 2021), ]\n\n# Create a bar chart with modified x-axis and light pink color\ngg &lt;- ggplot(asian_data, aes(x = as.factor(Year), fill = factor(Year))) +\n  geom_bar(color = \"black\", fill = \"lightblue\") +\n  scale_x_discrete(breaks = c(\"2020\", \"2021\")) +\n  labs(title = \"Total Number of Asian Victims by Year\",\n       x = \"Year\",\n       y = \"Total Number of Victims\") +\n  theme_minimal()\n\n# Create a bar chart with modified data labels (with commas and decimal places)\ngg + geom_text(\n  aes(label = sprintf(\"%s (%.1f%%)\", format(..count.., big.mark = \",\"), ..count.. / sum(..count..) * 100)),\n  position = position_stack(vjust = 0.5),\n  stat = \"count\",\n  color = \"black\"\n)\n\nWarning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(count)` instead.\n\n\n\n\n\n\n# Install and load required packages\n#install.packages(\"ggplot2\")\nlibrary(ggplot2)\n\n# Assuming your data frame is named 'lacrime'\n# Convert Vict.Descent to a new column 'EthnicityGroup' based on the specified criteria\nlacrime$EthnicityGroup &lt;- ifelse(lacrime$Vict.Descent %in% c(\"A\", \"C\", \"F\", \"J\", \"K\", \"V\"), \"Asian\",\n                                  ifelse(lacrime$Vict.Descent == \"B\", \"Black\",\n                                         ifelse(lacrime$Vict.Descent == \"H\", \"Hispanic\",\n                                                ifelse(lacrime$Vict.Descent == \"I\", \"American Indian\",\n                                                       ifelse(lacrime$Vict.Descent == \"O\", \"Others\",\n                                                              ifelse(lacrime$Vict.Descent == \"W\", \"White\", lacrime$Vict.Descent)\n                                                       )\n                                                )\n                                         )\n                                  )\n)\n\n# Filter data for Asian ethnicity and exclude the year 2022\nasian_data &lt;- lacrime[lacrime$Ethnicity == \"Black\" & lacrime$Year %in% c(2020, 2021), ]\n\n# Create a bar chart with modified x-axis and light pink color\ngg &lt;- ggplot(asian_data, aes(x = as.factor(Year), fill = factor(Year))) +\n  geom_bar(color = \"black\", fill = \"Gray\") +\n  scale_x_discrete(breaks = c(\"2020\", \"2021\")) +\n  labs(title = \"Total Number of Black Victims by Year\",\n       x = \"Year\",\n       y = \"Total Number of Victims\") +\n  theme_minimal()\n\n# Create a bar chart with modified data labels (with commas and decimal places)\ngg + geom_text(\n  aes(label = sprintf(\"%s (%.1f%%)\", format(..count.., big.mark = \",\"), ..count.. / sum(..count..) * 100)),\n  position = position_stack(vjust = 0.5),\n  stat = \"count\",\n  color = \"black\"\n)\n\n\n\n\n\n# Install and load required packages\n#install.packages(\"ggplot2\")\nlibrary(ggplot2)\n\n# Assuming your data frame is named 'lacrime'\n# Convert Vict.Descent to a new column 'EthnicityGroup' based on the specified criteria\nlacrime$EthnicityGroup &lt;- ifelse(lacrime$Vict.Descent %in% c(\"A\", \"C\", \"F\", \"J\", \"K\", \"V\"), \"Asian\",\n                                  ifelse(lacrime$Vict.Descent == \"B\", \"Black\",\n                                         ifelse(lacrime$Vict.Descent == \"H\", \"Hispanic\",\n                                                ifelse(lacrime$Vict.Descent == \"I\", \"American Indian\",\n                                                       ifelse(lacrime$Vict.Descent == \"O\", \"Others\",\n                                                              ifelse(lacrime$Vict.Descent == \"W\", \"White\", lacrime$Vict.Descent)\n                                                       )\n                                                )\n                                         )\n                                  )\n)\n\n# Filter data for Asian ethnicity and exclude the year 2022\nasian_data &lt;- lacrime[lacrime$Ethnicity == \"White\" & lacrime$Year %in% c(2020, 2021), ]\n\n# Create a bar chart with modified x-axis and light pink color\ngg &lt;- ggplot(asian_data, aes(x = as.factor(Year), fill = factor(Year))) +\n  geom_bar(color = \"black\", fill = \"White\") +\n  scale_x_discrete(breaks = c(\"2020\", \"2021\")) +\n  labs(title = \"Total Number of White Victims by Year\",\n       x = \"Year\",\n       y = \"Total Number of Victims\") +\n  theme_minimal()\n\n# Create a bar chart with modified data labels (with commas and decimal places)\ngg + geom_text(\n  aes(label = sprintf(\"%s (%.1f%%)\", format(..count.., big.mark = \",\"), ..count.. / sum(..count..) * 100)),\n  position = position_stack(vjust = 0.5),\n  stat = \"count\",\n  color = \"black\"\n)\n\n\n\n\n\n# Install and load required packages\n#install.packages(c(\"ggplot2\", \"lubridate\", \"scales\"))\nlibrary(ggplot2)\nlibrary(lubridate)\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\nlibrary(scales)\n\n# Convert DATE.OCC to a Date object\nlacrime$DATE.OCC &lt;- as.Date(lacrime$DATE.OCC, format = \"%m/%d/%Y\")\n\n# Filter the data on Asian ethnicity and exclude the year 2022\nasian_data &lt;- lacrime[lacrime$Vict.Descent %in% c(\"A\", \"C\", \"F\", \"J\", \"K\", \"V\") & year(lacrime$DATE.OCC) != 2022, ]\n\n# Create a new column 'MonthYear' by combining Month and Year\nasian_data$MonthYear &lt;- format(asian_data$DATE.OCC, \"%Y-%m\")\n\n# Create a bar chart with light blue color and labels with commas, remove the legend\nggplot(asian_data, aes(x = MonthYear, fill = \"lightblue\")) +\n  geom_bar() +\n  geom_text(stat = \"count\", aes(label = comma(after_stat(count))), vjust = -0.5) +\n  labs(title = \"Total Number of Asian Victims by Month and Year\",\n       x = \"Month-Year\",\n       y = \"Total Number of Victims\") +\n  theme_minimal() +\n  theme(legend.position = \"none\") +\n  scale_fill_manual(values = \"lightblue\")\n\n\n\n\n\n# Convert DATE.OCC to a Date object\nlacrime$DATE.OCC &lt;- as.Date(lacrime$DATE.OCC, format = \"%m/%d/%Y\")\n\n# Filter the data on Black ethnicity and exclude the year 2022\nblack_data &lt;- lacrime[lacrime$Vict.Descent %in% c(\"B\") & year(lacrime$DATE.OCC) != 2022, ]\n\n# Create a new column 'MonthYear' by combining Month and Year\nblack_data$MonthYear &lt;- format(black_data$DATE.OCC, \"%Y-%m\")\n\n# Create a bar chart with gray fill color and labels with commas, remove the legend\nggplot(black_data, aes(x = MonthYear, fill = \"Gray\")) +\n  geom_bar() +\n  geom_text(stat = \"count\", aes(label = comma(after_stat(count))), vjust = -0.5) +\n  labs(title = \"Total Number of Black Victims by Month and Year\",\n       x = \"Month-Year\",\n       y = \"Total Number of Victims\") +\n  theme_minimal() +\n  theme(legend.position = \"none\") +\n  scale_fill_manual(values = \"gray\")\n\n\n\n\n\n# Convert DATE.OCC to a Date object\nlacrime$DATE.OCC &lt;- as.Date(lacrime$DATE.OCC, format = \"%m/%d/%Y\")\n\n# Filter the data on White ethnicity and exclude the year 2022\nwhite_data &lt;- lacrime[lacrime$Vict.Descent %in% c(\"W\") & year(lacrime$DATE.OCC) != 2022, ]\n\n# Create a new column 'MonthYear' by combining Month and Year\nwhite_data$MonthYear &lt;- format(white_data$DATE.OCC, \"%Y-%m\")\n\n# Create a bar chart with gray fill color and labels with commas, remove the legend\nggplot(white_data, aes(x = MonthYear, fill = \"lightpink\")) +\n  geom_bar() +\n  geom_text(stat = \"count\", aes(label = comma(after_stat(count))), vjust = -0.5) +\n  labs(title = \"Total Number of White Victims by Month and Year\",\n       x = \"Month-Year\",\n       y = \"Total Number of Victims\") +\n  theme_minimal() +\n  theme(legend.position = \"none\") +\n  scale_fill_manual(values = \"lightpink\")\n\n\n\n\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n#lacrime &lt;- lacrime[2:148206, ]\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"\"] &lt;- \"X\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"C\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"F\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"J\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"K\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"V\"] &lt;- \"A\"\n\nfiltered_data &lt;- lacrime %&gt;% filter(Vict.Descent == \"A\")\n\ndates_for_letter_A &lt;- filtered_data$DATE.OCC\n\nfiltered_data$DATE.OCC &lt;- as.Date(filtered_data$DATE.OCC)\n\nsummary_data &lt;- filtered_data %&gt;%\n  group_by(DATE.OCC) %&gt;%\n  summarize(Count = n())\n\nplot(summary_data$DATE.OCC, summary_data$Count, type = \"p\", pch = 1, cex = 0.4,\n     col = \"blue\", xlab = \"Date Occurred\", ylab = \"Number of Victims\", \n     main = \"Number of Asian Victims Daily in Los Angeles 2020\", mgp = c(3, 1, 0),\n     xaxt = \"n\", yaxt = \"n\")\naxis(1, at = seq(min(summary_data$DATE.OCC), max(summary_data$DATE.OCC), by = \"month\"), \n     labels = format(seq(min(summary_data$DATE.OCC), max(summary_data$DATE.OCC), by = \"month\"), \"%b %Y\"), cex.axis = 0.4)\naxis(2, las = 0, cex.axis = 0.4)\n\nlockdown_date &lt;- as.Date(\"2020-03-19\")\ntext(x = lockdown_date, y = max(summary_data$Count), labels = \"Lockdown 3/19\", pos = 1, offset = 1, cex = 0.4)\n\ntravel_ban &lt;- as.Date(\"2020-01-31\")\ntext(x = travel_ban, y = 39, labels = \"Travel Ban 1/31\", pos = 1, offset = 1, cex = 0.4)\n\nmodel &lt;- lm(summary_data$Count ~ as.numeric(summary_data$DATE.OCC))\nabline(model, col = \"red\")\n\n\n\n\n\n#lacrime &lt;- lacrime[2:148206, ]\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"\"] &lt;- \"X\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"C\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"F\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"J\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"K\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"V\"] &lt;- \"A\"\n\nfiltered_data &lt;- lacrime %&gt;% filter(Vict.Descent == \"W\")\n\ndates_for_letter_A &lt;- filtered_data$DATE.OCC\n\nfiltered_data$DATE.OCC &lt;- as.Date(filtered_data$DATE.OCC)\n\nsummary_data &lt;- filtered_data %&gt;%\n  group_by(DATE.OCC) %&gt;%\n  summarize(Count = n())\n\nplot(summary_data$DATE.OCC, summary_data$Count, type = \"p\", pch = 1, cex = 0.4,\n     col = \"blue\", xlab = \"Date Occurred\", ylab = \"Number of Victims\", \n     main = \"Number of White Victims Daily in Los Angeles 2020\", mgp = c(3, 1, 0),\n     xaxt = \"n\", yaxt = \"n\")\naxis(1, at = seq(min(summary_data$DATE.OCC), max(summary_data$DATE.OCC), by = \"month\"), \n     labels = format(seq(min(summary_data$DATE.OCC), max(summary_data$DATE.OCC), by = \"month\"), \"%b %Y\"), cex.axis = 0.4)\naxis(2, las = 0, cex.axis = 0.4)\n\n#lockdown_date &lt;- as.Date(\"2020-03-19\")\n#text(x = lockdown_date, y = max(summary_data$Count), labels = \"Lockdown 3/19\", pos = 1, offset = 1, cex = 0.4)\n\n#travel_ban &lt;- as.Date(\"2020-01-31\")\n#text(x = travel_ban, y = 39, labels = \"Travel Ban 1/31\", pos = 1, offset = 1, cex = 0.4)\n\nmodel &lt;- lm(summary_data$Count ~ as.numeric(summary_data$DATE.OCC))\nabline(model, col = \"red\")\n\n\n\n\n\nlibrary(dplyr)\n\n#lacrime &lt;- lacrime[2:148206, ]\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"\"] &lt;- \"X\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"C\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"F\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"J\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"K\"] &lt;- \"A\"\nlacrime$Vict.Descent[lacrime$Vict.Descent == \"V\"] &lt;- \"A\"\n\nfiltered_data &lt;- lacrime %&gt;% filter(Vict.Descent == \"B\")\n\ndates_for_letter_A &lt;- filtered_data$DATE.OCC\n\nfiltered_data$DATE.OCC &lt;- as.Date(filtered_data$DATE.OCC)\n\nsummary_data &lt;- filtered_data %&gt;%\n  group_by(DATE.OCC) %&gt;%\n  summarize(Count = n())\n\nplot(summary_data$DATE.OCC, summary_data$Count, type = \"p\", pch = 1, cex = 0.4,\n     col = \"blue\", xlab = \"Date Occurred\", ylab = \"Number of Victims\", \n     main = \"Number of Black Victims Daily in Los Angeles 2020\", mgp = c(3, 1, 0),\n     xaxt = \"n\", yaxt = \"n\")\naxis(1, at = seq(min(summary_data$DATE.OCC), max(summary_data$DATE.OCC), by = \"month\"), \n     labels = format(seq(min(summary_data$DATE.OCC), max(summary_data$DATE.OCC), by = \"month\"), \"%b %Y\"), cex.axis = 0.4)\naxis(2, las = 0, cex.axis = 0.4)\n\n#lockdown_date &lt;- as.Date(\"2020-03-19\")\n#text(x = lockdown_date, y = max(summary_data$Count), labels = \"Lockdown 3/19\", pos = 1, offset = 1, cex = 0.4)\n\n#travel_ban &lt;- as.Date(\"2020-01-31\")\n#text(x = travel_ban, y = 39, labels = \"Travel Ban 1/31\", pos = 1, offset = 1, cex = 0.4)\n\nmodel &lt;- lm(summary_data$Count ~ as.numeric(summary_data$DATE.OCC))\nabline(model, col = \"red\")"
  },
  {
    "objectID": "Assignment 9.html",
    "href": "Assignment 9.html",
    "title": "Assignment 9",
    "section": "",
    "text": "# Plotting time series data using TSstudio\n# install.packages(c(\"quantmod\", \"tidyverse\",\"TSstudio\"))\n# lapply(c(\"quantmod\", \"tidyverse\",\"TSstudio\"), require, character.only = TRUE)\n\nlibrary(TSstudio)\nquantmod::getSymbols(\"AAPL\", src=\"yahoo\")\n\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n\n\n[1] \"AAPL\"\n\nclass(AAPL)\n\n[1] \"xts\" \"zoo\"\n\nts_plot(AAPL$AAPL.Adjusted, \n        title = \"Apple Stock prices\",\n        Ytitle = \"\")\n\n\n\n\nclass(AAPL) # What class is this object?\n\n[1] \"xts\" \"zoo\"\n\n# Some sample dataset from TSstudio\nts_seasonal(USgas, type = \"\") # month-year matrix data\n\nWarning in ts_seasonal(USgas, type = \"\"): The 'type' parameter is\ninvalide,using the default option - 'normal'\n\n\n\n\n\n# What class is USgas?\n\n# Sample charts\nts_heatmap(USgas)\n\n\n\n\nts_cor(USgas) # ACF and PACF\n\n\n\n\nts_lags(USgas, margin = .01)\n\n\n\n\nusgas=data.frame(USgas)"
  },
  {
    "objectID": "posts/welcome/Assignment 9.html",
    "href": "posts/welcome/Assignment 9.html",
    "title": "Assignment 9",
    "section": "",
    "text": "# Plotting time series data using TSstudio\n# install.packages(c(\"quantmod\", \"tidyverse\",\"TSstudio\"))\n# lapply(c(\"quantmod\", \"tidyverse\",\"TSstudio\"), require, character.only = TRUE)\n\nlibrary(TSstudio)\nquantmod::getSymbols(\"AAPL\", src=\"yahoo\")\n\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n\n\n[1] \"AAPL\"\n\nclass(AAPL)\n\n[1] \"xts\" \"zoo\"\n\nts_plot(AAPL$AAPL.Adjusted, \n        title = \"Apple Stock prices\",\n        Ytitle = \"\")\n\n\n\n\nclass(AAPL) # What class is this object?\n\n[1] \"xts\" \"zoo\"\n\n# Some sample dataset from TSstudio\nts_seasonal(USgas, type = \"\") # month-year matrix data\n\nWarning in ts_seasonal(USgas, type = \"\"): The 'type' parameter is\ninvalide,using the default option - 'normal'\n\n\n\n\n\n# What class is USgas?\n\n# Sample charts\nts_heatmap(USgas)\n\n\n\n\nts_cor(USgas) # ACF and PACF\n\n\n\n\nts_lags(USgas, margin = .01)\n\n\n\n\nusgas=data.frame(USgas)\n\n\n# Plotting time series data using dygraph\n# install.packages(c(\"quantmod\", \"tidyverse\",\"dygraphs\"))\n# lapply(c(\"quantmod\", \"tidyverse\",\"dygraphs\"), require, character.only = TRUE)\n\nlibrary(dygraphs)\npar(family=\"Palatino\")\nquantmod::getSymbols(\"AAPL\", src=\"yahoo\")\n\n[1] \"AAPL\"\n\nclass(AAPL)\n\n[1] \"xts\" \"zoo\"\n\nm = tail(AAPL, n=30)\nm =m[,1:(ncol(m)-2)] # drop last two columns \nnames(m)&lt;-c('Open', 'High', 'Low', 'Close') # rename columns for plotting\ndygraph(m, main = \"Twitter Stock Prices (Candlestick Chart)\") %&gt;%  \n  dyCandlestickGroup(c('Open', 'High', 'Low', 'Close')) %&gt;% \n  dyCandlestick() %&gt;% \n  dyLegend(show = \"always\", hideOnMouseOut = TRUE) %&gt;% \n  dyCSS(\"dygraph.css\")  # Correctly reference the CSS file"
  },
  {
    "objectID": "Assignment 10.html",
    "href": "Assignment 10.html",
    "title": "Assignment 10",
    "section": "",
    "text": "## R Leaflet sample program \n## file: spatial_leaflet.R\n## Create an interactive map for web using ESRI Leaflet\n# Package:  leaflet, htmlwidgets, tidyverse\n\n## install.packages(c(\"htmlwidgets\", \"leaflet\", \"tidyverse\"))\nlibrary(htmlwidgets)\nlibrary(leaflet)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Get EPPS geocode information (i.e. lon, lat) from online geocoder websites.\n# For example: https://www.mapdevelopers.com/geocode_tool.php\n\n# Create object using leaflet setting the view at EPPS geo location)\neppsmap &lt;- leaflet() %&gt;% setView(-96.7478372, 32.9886268, zoom=14)\n\n# Create object to acquire map data from ESRI\nesri &lt;- grep(\"^Esri\", providers, value = TRUE)\n\nfor (provider in esri) {\n  eppsmap &lt;- eppsmap %&gt;% addProviderTiles(provider, group = provider)\n}\n\nfindmeat &lt;- paste(sep = \"&lt;br/&gt;\",\n                  \"&lt;b&gt;&lt;img src='https://karlho.github.io/images/karlportrait140.png' alt='Karl Ho'  style='width:45px;height:60px;' align = 'right'&gt;&lt;/b&gt;\",\n                  \"&lt;b&gt;&lt;a href='http://karlho.com' target='_blank'&gt;Karl Ho &lt;/a&gt;&lt;/b&gt;\",\n                  \"&lt;b&gt;&lt;a href='http://epps.utdallas.edu' target='_blank'&gt;School of Economic, &lt;/a&gt;&lt;/b&gt;\",\n                  \"&lt;b&gt;&lt;a href='http://epps.utdallas.edu' target='_blank'&gt;Political and Policy Sciences&lt;/a&gt;&lt;/b&gt;\",\n                  \"&lt;b&gt;&lt;a href='http://www.utdallas.edu' target='_blank'&gt;University of Texsa at Dallas&lt;/a&gt;&lt;/b&gt;\",\n                  \"800 West Campbell Road, GR31\",\n                  \"Richardson TX 75080\"\n)\n\n# Use htmlwidget::onRender function to  add custom behavior to the leaflet map using native JavaScript.\n\neppsmap %&gt;%\n  addLayersControl(baseGroups = names(esri),\n                   options = layersControlOptions(collapsed = TRUE)) %&gt;%\n  # addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,\n  #           position = \"bottomleft\") %&gt;%\n  addMarkers(eppsmap, lng=-96.7478372, lat=32.9886268, popup=findmeat)  %&gt;%\n  htmlwidgets::onRender(\"\n                        function(el, x) {\n                        var myMap = this;\n                        myMap.on('baselayerchange',\n                        function (e) {\n                        myMap.minimap.changeLayer(L.tileLayer.provider(e.name));\n                        })\n                        }\")"
  },
  {
    "objectID": "posts/welcome/Assignment 10.html",
    "href": "posts/welcome/Assignment 10.html",
    "title": "Assignment 10",
    "section": "",
    "text": "## R Leaflet sample program \n## file: spatial_leaflet.R\n## Create an interactive map for web using ESRI Leaflet\n# Package:  leaflet, htmlwidgets, tidyverse\n\n## install.packages(c(\"htmlwidgets\", \"leaflet\", \"tidyverse\"))\nlibrary(htmlwidgets)\nlibrary(leaflet)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Get EPPS geocode information (i.e. lon, lat) from online geocoder websites.\n# For example: https://www.mapdevelopers.com/geocode_tool.php\n\n# Create object using leaflet setting the view at EPPS geo location)\neppsmap &lt;- leaflet() %&gt;% setView(-96.7478372, 32.9886268, zoom=14)\n\n# Create object to acquire map data from ESRI\nesri &lt;- grep(\"^Esri\", providers, value = TRUE)\n\nfor (provider in esri) {\n  eppsmap &lt;- eppsmap %&gt;% addProviderTiles(provider, group = provider)\n}\n\nfindmeat &lt;- paste(sep = \"&lt;br/&gt;\",\n                  \"&lt;b&gt;&lt;img src='https://karlho.github.io/images/karlportrait140.png' alt='Karl Ho'  style='width:45px;height:60px;' align = 'right'&gt;&lt;/b&gt;\",\n                  \"&lt;b&gt;&lt;a href='http://karlho.com' target='_blank'&gt;Karl Ho &lt;/a&gt;&lt;/b&gt;\",\n                  \"&lt;b&gt;&lt;a href='http://epps.utdallas.edu' target='_blank'&gt;School of Economic, &lt;/a&gt;&lt;/b&gt;\",\n                  \"&lt;b&gt;&lt;a href='http://epps.utdallas.edu' target='_blank'&gt;Political and Policy Sciences&lt;/a&gt;&lt;/b&gt;\",\n                  \"&lt;b&gt;&lt;a href='http://www.utdallas.edu' target='_blank'&gt;University of Texsa at Dallas&lt;/a&gt;&lt;/b&gt;\",\n                  \"800 West Campbell Road, GR31\",\n                  \"Richardson TX 75080\"\n)\n\n# Use htmlwidget::onRender function to  add custom behavior to the leaflet map using native JavaScript.\n\neppsmap %&gt;%\n  addLayersControl(baseGroups = names(esri),\n                   options = layersControlOptions(collapsed = TRUE)) %&gt;%\n  # addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,\n  #           position = \"bottomleft\") %&gt;%\n  addMarkers(eppsmap, lng=-96.7478372, lat=32.9886268, popup=findmeat)  %&gt;%\n  htmlwidgets::onRender(\"\n                        function(el, x) {\n                        var myMap = this;\n                        myMap.on('baselayerchange',\n                        function (e) {\n                        myMap.minimap.changeLayer(L.tileLayer.provider(e.name));\n                        })\n                        }\")"
  }
]